Step 1. Run & Test the API
Run your Flask app
python app.py
You should see:
* Running on http://127.0.0.1:5000
Test different scenarios using curl or Postman:
Public (no auth needed):
curl http://127.0.0.1:5000/api/ping
→ Should return: {"ok": true, "message": "pong"}
Protected endpoint (no token):
curl http://127.0.0.1:5000/api/secret
→ Should return 401 Unauthorized with an error JSON.
With valid read-only token:
curl -H "Authorization: Bearer secret-token-123" http://127.0.0.1:5000/v1/weather/current?city=London
→ Should return fake weather data for London.
Try POST without scope:
curl -X POST -H "Authorization: Bearer secret-token-123" \
     -H "Content-Type: application/json" \
     -d '{"temp":30}' \
     http://127.0.0.1:5000/v1/weather/observations
→ Should return 403 insufficient_scope.
POST with admin token:
curl -X POST -H "Authorization: Bearer admin-token-456" \
     -H "Content-Type: application/json" \
     -d '{"temp":30,"condition":"Sunny"}' \
     http://127.0.0.1:5000/v1/weather/observations
→ Should succeed with "status": "created".